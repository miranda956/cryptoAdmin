[{"/Users/mac/projects/crypto/Admin/admin/UI/src/index.js":"1","/Users/mac/projects/crypto/Admin/admin/UI/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js":"2","/Users/mac/projects/crypto/Admin/admin/UI/src/components/ThemeWrapper/ThemeWrapper.js":"3","/Users/mac/projects/crypto/Admin/admin/UI/src/layouts/RTL/RTL.js":"4","/Users/mac/projects/crypto/Admin/admin/UI/src/layouts/Admin/Admin.js":"5","/Users/mac/projects/crypto/Admin/admin/UI/src/contexts/ThemeContext.js":"6","/Users/mac/projects/crypto/Admin/admin/UI/src/contexts/BackgroundColorContext.js":"7","/Users/mac/projects/crypto/Admin/admin/UI/src/routes.js":"8","/Users/mac/projects/crypto/Admin/admin/UI/src/components/Footer/Footer.js":"9","/Users/mac/projects/crypto/Admin/admin/UI/src/components/Navbars/RTLNavbar.js":"10","/Users/mac/projects/crypto/Admin/admin/UI/src/components/Navbars/AdminNavbar.js":"11","/Users/mac/projects/crypto/Admin/admin/UI/src/components/Sidebar/Sidebar.js":"12","/Users/mac/projects/crypto/Admin/admin/UI/src/components/FixedPlugin/FixedPlugin.js":"13","/Users/mac/projects/crypto/Admin/admin/UI/src/views/Map.js":"14","/Users/mac/projects/crypto/Admin/admin/UI/src/views/Dashboard.js":"15","/Users/mac/projects/crypto/Admin/admin/UI/src/views/Notifications.js":"16","/Users/mac/projects/crypto/Admin/admin/UI/src/views/Icons.js":"17","/Users/mac/projects/crypto/Admin/admin/UI/src/views/Rtl.js":"18","/Users/mac/projects/crypto/Admin/admin/UI/src/views/TableList.js":"19","/Users/mac/projects/crypto/Admin/admin/UI/src/views/Typography.js":"20","/Users/mac/projects/crypto/Admin/admin/UI/src/views/UserProfile.js":"21","/Users/mac/projects/crypto/Admin/admin/UI/src/variables/charts.js":"22"},{"size":1648,"mtime":1628129678000,"results":"23","hashOfConfig":"24"},{"size":495,"mtime":1628129678000,"results":"25","hashOfConfig":"24"},{"size":695,"mtime":1628129678000,"results":"26","hashOfConfig":"24"},{"size":5573,"mtime":1628129678000,"results":"27","hashOfConfig":"24"},{"size":4710,"mtime":1628129678000,"results":"28","hashOfConfig":"24"},{"size":201,"mtime":1628129678000,"results":"29","hashOfConfig":"24"},{"size":254,"mtime":1628129678000,"results":"30","hashOfConfig":"24"},{"size":2230,"mtime":1628149790000,"results":"31","hashOfConfig":"24"},{"size":1298,"mtime":1628144467000,"results":"32","hashOfConfig":"24"},{"size":7000,"mtime":1628129678000,"results":"33","hashOfConfig":"24"},{"size":3957,"mtime":1628147007000,"results":"34","hashOfConfig":"24"},{"size":4593,"mtime":1628143892000,"results":"35","hashOfConfig":"24"},{"size":4130,"mtime":1628148628000,"results":"36","hashOfConfig":"24"},{"size":7550,"mtime":1628129678000,"results":"37","hashOfConfig":"24"},{"size":6675,"mtime":1628150994000,"results":"38","hashOfConfig":"24"},{"size":1531,"mtime":1628151349000,"results":"39","hashOfConfig":"24"},{"size":41878,"mtime":1628129678000,"results":"40","hashOfConfig":"24"},{"size":22392,"mtime":1628129678000,"results":"41","hashOfConfig":"24"},{"size":1528,"mtime":1628151376000,"results":"42","hashOfConfig":"24"},{"size":8519,"mtime":1628129678000,"results":"43","hashOfConfig":"24"},{"size":1531,"mtime":1628151462000,"results":"44","hashOfConfig":"24"},{"size":10910,"mtime":1628129678000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"go4f7r",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/projects/crypto/Admin/admin/UI/src/index.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/components/ThemeWrapper/ThemeWrapper.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/layouts/RTL/RTL.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/layouts/Admin/Admin.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/contexts/ThemeContext.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/contexts/BackgroundColorContext.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/routes.js",["96","97","98"],"/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.js\";\nimport Icons from \"views/Icons.js\";\nimport Map from \"views/Map.js\";\nimport Notifications from \"views/Notifications.js\";\nimport Rtl from \"views/Rtl.js\";\nimport TableList from \"views/TableList.js\";\nimport Typography from \"views/Typography.js\";\nimport UserProfile from \"views/UserProfile.js\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  /*{\n    path: \"/icons\",\n    name: \"Icons\",\n    rtlName: \"الرموز\",\n    icon: \"tim-icons icon-atom\",\n    component: Icons,\n    layout: \"/admin\",\n  },*/\n  {\n    path: \"/tables\",\n    name: \"Customers\",\n    icon: \" tim-icons icon-single-02 \",\n    component: TableList,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/notifications\",\n    name: \"Deposits\",\n    icon: \"tim-icons icon-bank\",\n    component: Notifications,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user-profile\",\n    name: \"WITHDRAWALS\",\n    icon: \"tim-icons icon-credit-card \",\n    component: UserProfile,\n    layout: \"/admin\",\n  },\n /* {\n    path: \"/tables\",\n    name: \"Table List\",\n    rtlName: \"قائمة الجدول\",\n    icon: \"tim-icons icon-puzzle-10\",\n    component: TableList,\n    layout: \"/admin\",\n  }, */\n  {\n    path: \"/dashboard\",\n    name: \"ANALYTICS\",\n    icon: \"tim-icons icon-chart-bar-32\",\n    component: Typography,\n    layout: \"/admin\",\n  },\n  /*{\n    path: \"/rtl-support\",\n    name: \"RTL Support\",\n    rtlName: \"ار تي ال\",\n    icon: \"tim-icons icon-world\",\n    component: Rtl,\n    layout: \"/rtl\",\n  },*/\n];\nexport default routes;\n","/Users/mac/projects/crypto/Admin/admin/UI/src/components/Footer/Footer.js",[],["99","100"],"/Users/mac/projects/crypto/Admin/admin/UI/src/components/Navbars/RTLNavbar.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/components/Navbars/AdminNavbar.js",["101","102","103","104","105","106"],"/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n  NavbarToggler,\n  ModalHeader,\n} from \"reactstrap\";\n\nfunction AdminNavbar(props) {\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [modalSearch, setmodalSearch] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setmodalSearch(!modalSearch);\n  };\n  return (\n    <>\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <NavbarToggler onClick={props.toggleSidebar}>\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </NavbarToggler>\n            </div>\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              {props.brandText}\n            </NavbarBrand>\n          </div>\n          <NavbarToggler onClick={toggleCollapse}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <InputGroup className=\"search-bar\">\n                \n              </InputGroup>\n\n              \n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      <Modal\n        modalClassName=\"modal-search\"\n        isOpen={modalSearch}\n        toggle={toggleModalSearch}\n      >\n        <ModalHeader>\n          <Input placeholder=\"SEARCH\" type=\"text\" />\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            onClick={toggleModalSearch}\n          >\n            <i className=\"tim-icons icon-simple-remove\" />\n          </button>\n        </ModalHeader>\n      </Modal>\n    </>\n  );\n}\n\nexport default AdminNavbar;\n","/Users/mac/projects/crypto/Admin/admin/UI/src/components/Sidebar/Sidebar.js",["107","108","109","110","111"],"// @ts-nocheck\n\nimport React from \"react\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const location = useLocation();\n  const sidebarRef = React.useRef(null);\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebarRef.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  const linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  const { routes, rtlActive, logo } = props;\n  let logoImg = null;\n  let logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-mini\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </a>\n      );\n      logoText = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-normal\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </a>\n      );\n    } else {\n      logoImg = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-mini\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </Link>\n      );\n      logoText = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-normal\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </Link>\n      );\n    }\n  }\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <div className=\"sidebar\" data={color}>\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\n            {logoImg !== null || logoText !== null ? (\n              <div className=\"logo\">\n                CRYPTO ADMIN\n              </div>\n            ) : null}\n            <Nav>\n              {routes.map((prop, key) => {\n                if (prop.redirect) return null;\n                return (\n                  <li\n                    className={\n                      activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                      onClick={props.toggleSidebar}\n                    >\n                      <i className={prop.icon} />\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                    </NavLink>\n                  </li>\n                );\n              })}\n              <li className=\"active-pro\">\n               \n              </li>\n            </Nav>\n          </div>\n        </div>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","/Users/mac/projects/crypto/Admin/admin/UI/src/components/FixedPlugin/FixedPlugin.js",["112"],"/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Dropdown, DropdownToggle, Badge } from \"reactstrap\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\nimport { backgroundColors } from \"contexts/BackgroundColorContext\";\n\nfunction FixedPlugin(props) {\n  const [dropDownIsOpen, setdropDownIsOpen] = React.useState(false);\n  const handleClick = () => {\n    setdropDownIsOpen(!dropDownIsOpen);\n  };\n  return (\n    <div className=\"fixed-plugin\">\n      <Dropdown isOpen={dropDownIsOpen} toggle={handleClick}>\n        \n        <ul className=\"dropdown-menu show\">\n          <li className=\"header-title\">SIDEBAR BACKGROUND</li>\n          <li className=\"adjustments-line\">\n            <div className=\"badge-colors text-center\">\n              <Badge\n                color=\"primary\"\n                className={\n                  props.bgColor === backgroundColors.primary ? \"active\" : \"\"\n                }\n                onClick={() => {\n                  props.handleBgClick(backgroundColors.primary);\n                }}\n              />{\" \"}\n              <Badge\n                color=\"info\"\n                className={\n                  props.bgColor === backgroundColors.blue ? \"active\" : \"\"\n                }\n                onClick={() => {\n                  props.handleBgClick(backgroundColors.blue);\n                }}\n              />{\" \"}\n              <Badge\n                color=\"success\"\n                className={\n                  props.bgColor === backgroundColors.green ? \"active\" : \"\"\n                }\n                onClick={() => {\n                  props.handleBgClick(backgroundColors.green);\n                }}\n              />{\" \"}\n            </div>\n          </li>\n          <li className=\"adjustments-line text-center color-change\">\n            <ThemeContext.Consumer>\n              {({ changeTheme }) => (\n                <>\n                  <span className=\"color-label\">LIGHT MODE</span>{\" \"}\n                  <Badge\n                    className=\"light-badge mr-2\"\n                    onClick={() => changeTheme(themes.light)}\n                  />{\" \"}\n                  <Badge\n                    className=\"dark-badge ml-2\"\n                    onClick={() => changeTheme(themes.dark)}\n                  />{\" \"}\n                  <span className=\"color-label\">DARK MODE</span>{\" \"}\n                </>\n              )}\n            </ThemeContext.Consumer>\n          </li>\n          <li className=\"button-container\">\n            <Button\n              href=\"https://www.creative-tim.com/product/black-dashboard-react\"\n              color=\"primary\"\n              block\n              className=\"btn-round\"\n            >\n              Download Now\n            </Button>\n            <Button\n              color=\"default\"\n              block\n              className=\"btn-round\"\n              outline\n              href=\"https://demos.creative-tim.com/black-dashboard-react/#/documentation/tutorial\"\n            >\n              Documentation\n            </Button>\n          </li>\n          <li className=\"header-title\">Want more components?</li>\n          <li className=\"button-container\">\n            <Button\n              href=\"https://www.creative-tim.com/product/black-dashboard-pro-react\"\n              className=\"btn-round\"\n              disabled\n              block\n              color=\"danger\"\n            >\n              Get pro version\n            </Button>\n          </li>\n        </ul>\n      </Dropdown>\n    </div>\n  );\n}\n\nexport default FixedPlugin;\n","/Users/mac/projects/crypto/Admin/admin/UI/src/views/Map.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/views/Dashboard.js",["113","114","115","116","117","118","119","120","121","122","123"],"// @ts-nocheck\n/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Label,\n  FormGroup,\n  Input,\n  Table,\n  Row,\n  Col,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartExample1,\n  chartExample2,\n  chartExample3,\n  chartExample4,\n} from \"variables/charts.js\";\n\nfunction Dashboard(props) {\n  const [bigChartData, setbigChartData] = React.useState(\"data1\");\n  const setBgChartData = (name) => {\n    setbigChartData(name);\n  };\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col xs=\"12\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <h5 className=\"card-category\">Total Transctions</h5>\n                    <CardTitle tag=\"h2\">Performance</CardTitle>\n                  </Col>\n                  <Col sm=\"6\">\n                    <ButtonGroup\n                      className=\"btn-group-toggle float-right\"\n                      data-toggle=\"buttons\"\n                    >\n                      <Button\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data1\",\n                        })}\n                        color=\"info\"\n                        id=\"0\"\n                        size=\"sm\"\n                        onClick={() => setBgChartData(\"data1\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Accounts\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-single-02\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"1\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data2\",\n                        })}\n                        onClick={() => setBgChartData(\"data2\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Deposits\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-gift-2\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"2\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data3\",\n                        })}\n                        onClick={() => setBgChartData(\"data3\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Withdrawals\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-tap-02\" />\n                        </span>\n                      </Button>\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample1[bigChartData]}\n                    options={chartExample1.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Total Transctions</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-bell-55 text-info\" /> 763,215\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample2.data}\n                    options={chartExample2.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n          <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Amount Withdrawed</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-send text-success\" /> 12,100$\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample4.data}\n                    options={chartExample4.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Amount Deposited</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-send text-success\" /> 12,100$\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample4.data}\n                    options={chartExample4.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","/Users/mac/projects/crypto/Admin/admin/UI/src/views/Notifications.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/views/Icons.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/views/Rtl.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/views/TableList.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/views/Typography.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/views/UserProfile.js",[],"/Users/mac/projects/crypto/Admin/admin/UI/src/variables/charts.js",[],{"ruleId":"124","severity":1,"message":"125","line":19,"column":8,"nodeType":"126","messageId":"127","endLine":19,"endColumn":13},{"ruleId":"124","severity":1,"message":"128","line":20,"column":8,"nodeType":"126","messageId":"127","endLine":20,"endColumn":11},{"ruleId":"124","severity":1,"message":"129","line":22,"column":8,"nodeType":"126","messageId":"127","endLine":22,"endColumn":11},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"124","severity":1,"message":"134","line":24,"column":3,"nodeType":"126","messageId":"127","endLine":24,"endColumn":9},{"ruleId":"124","severity":1,"message":"135","line":26,"column":3,"nodeType":"126","messageId":"127","endLine":26,"endColumn":17},{"ruleId":"124","severity":1,"message":"136","line":27,"column":3,"nodeType":"126","messageId":"127","endLine":27,"endColumn":15},{"ruleId":"124","severity":1,"message":"137","line":28,"column":3,"nodeType":"126","messageId":"127","endLine":28,"endColumn":15},{"ruleId":"124","severity":1,"message":"138","line":29,"column":3,"nodeType":"126","messageId":"127","endLine":29,"endColumn":23},{"ruleId":"124","severity":1,"message":"139","line":34,"column":3,"nodeType":"126","messageId":"127","endLine":34,"endColumn":10},{"ruleId":"124","severity":1,"message":"140","line":12,"column":26,"nodeType":"126","messageId":"127","endLine":12,"endColumn":43},{"ruleId":"124","severity":1,"message":"141","line":15,"column":3,"nodeType":"126","messageId":"127","endLine":15,"endColumn":19},{"ruleId":"124","severity":1,"message":"142","line":41,"column":9,"nodeType":"126","messageId":"127","endLine":41,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":50,"column":9,"nodeType":"145","messageId":"146","endLine":55,"endColumn":10,"fix":"147"},{"ruleId":"143","severity":1,"message":"144","line":62,"column":9,"nodeType":"145","messageId":"146","endLine":67,"endColumn":10,"fix":"148"},{"ruleId":"124","severity":1,"message":"135","line":21,"column":28,"nodeType":"126","messageId":"127","endLine":21,"endColumn":42},{"ruleId":"124","severity":1,"message":"149","line":23,"column":16,"nodeType":"126","messageId":"127","endLine":23,"endColumn":19},{"ruleId":"124","severity":1,"message":"135","line":33,"column":3,"nodeType":"126","messageId":"127","endLine":33,"endColumn":17},{"ruleId":"124","severity":1,"message":"136","line":34,"column":3,"nodeType":"126","messageId":"127","endLine":34,"endColumn":15},{"ruleId":"124","severity":1,"message":"137","line":35,"column":3,"nodeType":"126","messageId":"127","endLine":35,"endColumn":15},{"ruleId":"124","severity":1,"message":"138","line":36,"column":3,"nodeType":"126","messageId":"127","endLine":36,"endColumn":23},{"ruleId":"124","severity":1,"message":"150","line":37,"column":3,"nodeType":"126","messageId":"127","endLine":37,"endColumn":8},{"ruleId":"124","severity":1,"message":"151","line":38,"column":3,"nodeType":"126","messageId":"127","endLine":38,"endColumn":12},{"ruleId":"124","severity":1,"message":"152","line":39,"column":3,"nodeType":"126","messageId":"127","endLine":39,"endColumn":8},{"ruleId":"124","severity":1,"message":"153","line":40,"column":3,"nodeType":"126","messageId":"127","endLine":40,"endColumn":8},{"ruleId":"124","severity":1,"message":"154","line":43,"column":3,"nodeType":"126","messageId":"127","endLine":43,"endColumn":22},{"ruleId":"124","severity":1,"message":"155","line":50,"column":3,"nodeType":"126","messageId":"127","endLine":50,"endColumn":16},"no-unused-vars","'Icons' is defined but never used.","Identifier","unusedVar","'Map' is defined but never used.","'Rtl' is defined but never used.","no-native-reassign",["156"],"no-negated-in-lhs",["157"],"'Button' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'NavLink' is defined but never used.","'ReactstrapNavLink' is defined but never used.","'backgroundColors' is defined but never used.","'linkOnClick' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"158","text":"159"},{"range":"160","text":"159"},"'Bar' is defined but never used.","'Label' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Table' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'chartExample3' is defined but never used.","no-global-assign","no-unsafe-negation",[1582,1582]," rel=\"noreferrer\"",[1898,1898]]